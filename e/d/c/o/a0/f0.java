package e.d.c.o.a0;

import e.d.b.n;
import e.d.c.b;
import java.io.IOException;
import java.util.HashMap;

public class f0 extends b {
  protected static final HashMap<Integer, String> e = new HashMap<Integer, String>();
  
  public static final HashMap<String, String> f = new HashMap<String, String>();
  
  static {
    f.put("D4028", "X-2,C-50Z");
    f.put("D4029", "E-20,E-20N,E-20P");
    f.put("D4034", "C720UZ");
    f.put("D4040", "E-1");
    f.put("D4041", "E-300");
    f.put("D4083", "C2Z,D520Z,C220Z");
    f.put("D4106", "u20D,S400D,u400D");
    f.put("D4120", "X-1");
    f.put("D4122", "u10D,S300D,u300D");
    f.put("D4125", "AZ-1");
    f.put("D4141", "C150,D390");
    f.put("D4193", "C-5000Z");
    f.put("D4194", "X-3,C-60Z");
    f.put("D4199", "u30D,S410D,u410D");
    f.put("D4205", "X450,D535Z,C370Z");
    f.put("D4210", "C160,D395");
    f.put("D4211", "C725UZ");
    f.put("D4213", "FerrariMODEL2003");
    f.put("D4216", "u15D");
    f.put("D4217", "u25D");
    f.put("D4220", "u-miniD,Stylus V");
    f.put("D4221", "u40D,S500,uD500");
    f.put("D4231", "FerrariMODEL2004");
    f.put("D4240", "X500,D590Z,C470Z");
    f.put("D4244", "uD800,S800");
    f.put("D4256", "u720SW,S720SW");
    f.put("D4261", "X600,D630,FE5500");
    f.put("D4262", "uD600,S600");
    f.put("D4301", "u810/S810");
    f.put("D4302", "u710,S710");
    f.put("D4303", "u700,S700");
    f.put("D4304", "FE100,X710");
    f.put("D4305", "FE110,X705");
    f.put("D4310", "FE-130,X-720");
    f.put("D4311", "FE-140,X-725");
    f.put("D4312", "FE150,X730");
    f.put("D4313", "FE160,X735");
    f.put("D4314", "u740,S740");
    f.put("D4315", "u750,S750");
    f.put("D4316", "u730/S730");
    f.put("D4317", "FE115,X715");
    f.put("D4321", "SP550UZ");
    f.put("D4322", "SP510UZ");
    f.put("D4324", "FE170,X760");
    f.put("D4326", "FE200");
    f.put("D4327", "FE190/X750");
    f.put("D4328", "u760,S760");
    f.put("D4330", "FE180/X745");
    f.put("D4331", "u1000/S1000");
    f.put("D4332", "u770SW,S770SW");
    f.put("D4333", "FE240/X795");
    f.put("D4334", "FE210,X775");
    f.put("D4336", "FE230/X790");
    f.put("D4337", "FE220,X785");
    f.put("D4338", "u725SW,S725SW");
    f.put("D4339", "FE250/X800");
    f.put("D4341", "u780,S780");
    f.put("D4343", "u790SW,S790SW");
    f.put("D4344", "u1020,S1020");
    f.put("D4346", "FE15,X10");
    f.put("D4348", "FE280,X820,C520");
    f.put("D4349", "FE300,X830");
    f.put("D4350", "u820,S820");
    f.put("D4351", "u1200,S1200");
    f.put("D4352", "FE270,X815,C510");
    f.put("D4353", "u795SW,S795SW");
    f.put("D4354", "u1030SW,S1030SW");
    f.put("D4355", "SP560UZ");
    f.put("D4356", "u1010,S1010");
    f.put("D4357", "u830,S830");
    f.put("D4359", "u840,S840");
    f.put("D4360", "FE350WIDE,X865");
    f.put("D4361", "u850SW,S850SW");
    f.put("D4362", "FE340,X855,C560");
    f.put("D4363", "FE320,X835,C540");
    f.put("D4364", "SP570UZ");
    f.put("D4366", "FE330,X845,C550");
    f.put("D4368", "FE310,X840,C530");
    f.put("D4370", "u1050SW,S1050SW");
    f.put("D4371", "u1060,S1060");
    f.put("D4372", "FE370,X880,C575");
    f.put("D4374", "SP565UZ");
    f.put("D4377", "u1040,S1040");
    f.put("D4378", "FE360,X875,C570");
    f.put("D4379", "FE20,X15,C25");
    f.put("D4380", "uT6000,ST6000");
    f.put("D4381", "uT8000,ST8000");
    f.put("D4382", "u9000,S9000");
    f.put("D4384", "SP590UZ");
    f.put("D4385", "FE3010,X895");
    f.put("D4386", "FE3000,X890");
    f.put("D4387", "FE35,X30");
    f.put("D4388", "u550WP,S550WP");
    f.put("D4390", "FE5000,X905");
    f.put("D4391", "u5000");
    f.put("D4392", "u7000,S7000");
    f.put("D4396", "FE5010,X915");
    f.put("D4397", "FE25,X20");
    f.put("D4398", "FE45,X40");
    f.put("D4401", "XZ-1");
    f.put("D4402", "uT6010,ST6010");
    f.put("D4406", "u7010,S7010 / u7020,S7020");
    f.put("D4407", "FE4010,X930");
    f.put("D4408", "X560WP");
    f.put("D4409", "FE26,X21");
    f.put("D4410", "FE4000,X920,X925");
    f.put("D4411", "FE46,X41,X42");
    f.put("D4412", "FE5020,X935");
    f.put("D4413", "uTough-3000");
    f.put("D4414", "StylusTough-6020");
    f.put("D4415", "StylusTough-8010");
    f.put("D4417", "u5010,S5010");
    f.put("D4418", "u7040,S7040");
    f.put("D4419", "u9010,S9010");
    f.put("D4423", "FE4040");
    f.put("D4424", "FE47,X43");
    f.put("D4426", "FE4030,X950");
    f.put("D4428", "FE5030,X965,X960");
    f.put("D4430", "u7030,S7030");
    f.put("D4432", "SP600UZ");
    f.put("D4434", "SP800UZ");
    f.put("D4439", "FE4020,X940");
    f.put("D4442", "FE5035");
    f.put("D4448", "FE4050,X970");
    f.put("D4450", "FE5050,X985");
    f.put("D4454", "u-7050");
    f.put("D4464", "T10,X27");
    f.put("D4470", "FE5040,X980");
    f.put("D4472", "TG-310");
    f.put("D4474", "TG-610");
    f.put("D4476", "TG-810");
    f.put("D4478", "VG145,VG140,D715");
    f.put("D4479", "VG130,D710");
    f.put("D4480", "VG120,D705");
    f.put("D4482", "VR310,D720");
    f.put("D4484", "VR320,D725");
    f.put("D4486", "VR330,D730");
    f.put("D4488", "VG110,D700");
    f.put("D4490", "SP-610UZ");
    f.put("D4492", "SZ-10");
    f.put("D4494", "SZ-20");
    f.put("D4496", "SZ-30MR");
    f.put("D4498", "SP-810UZ");
    f.put("D4500", "SZ-11");
    f.put("D4504", "TG-615");
    f.put("D4508", "TG-620");
    f.put("D4510", "TG-820");
    f.put("D4512", "TG-1");
    f.put("D4516", "SH-21");
    f.put("D4519", "SZ-14");
    f.put("D4520", "SZ-31MR");
    f.put("D4521", "SH-25MR");
    f.put("D4523", "SP-720UZ");
    f.put("D4529", "VG170");
    f.put("D4531", "XZ-2");
    f.put("D4535", "SP-620UZ");
    f.put("D4536", "TG-320");
    f.put("D4537", "VR340,D750");
    f.put("D4538", "VG160,X990,D745");
    f.put("D4541", "SZ-12");
    f.put("D4545", "VH410");
    f.put("D4546", "XZ-10");
    f.put("D4547", "TG-2");
    f.put("D4548", "TG-830");
    f.put("D4549", "TG-630");
    f.put("D4550", "SH-50");
    f.put("D4553", "SZ-16,DZ-105");
    f.put("D4562", "SP-820UZ");
    f.put("D4566", "SZ-15");
    f.put("D4572", "STYLUS1");
    f.put("D4574", "TG-3");
    f.put("D4575", "TG-850");
    f.put("D4579", "SP-100EE");
    f.put("D4580", "SH-60");
    f.put("D4581", "SH-1");
    f.put("D4582", "TG-835");
    f.put("D4585", "SH-2 / SH-3");
    f.put("D4586", "TG-4");
    f.put("D4587", "TG-860");
    f.put("D4591", "TG-870");
    f.put("D4809", "C2500L");
    f.put("D4842", "E-10");
    f.put("D4856", "C-1");
    f.put("D4857", "C-1Z,D-150Z");
    f.put("DCHC", "D500L");
    f.put("DCHT", "D600L / D620L");
    f.put("K0055", "AIR-A01");
    f.put("S0003", "E-330");
    f.put("S0004", "E-500");
    f.put("S0009", "E-400");
    f.put("S0010", "E-510");
    f.put("S0011", "E-3");
    f.put("S0013", "E-410");
    f.put("S0016", "E-420");
    f.put("S0017", "E-30");
    f.put("S0018", "E-520");
    f.put("S0019", "E-P1");
    f.put("S0023", "E-620");
    f.put("S0026", "E-P2");
    f.put("S0027", "E-PL1");
    f.put("S0029", "E-450");
    f.put("S0030", "E-600");
    f.put("S0032", "E-P3");
    f.put("S0033", "E-5");
    f.put("S0034", "E-PL2");
    f.put("S0036", "E-M5");
    f.put("S0038", "E-PL3");
    f.put("S0039", "E-PM1");
    f.put("S0040", "E-PL1s");
    f.put("S0042", "E-PL5");
    f.put("S0043", "E-PM2");
    f.put("S0044", "E-P5");
    f.put("S0045", "E-PL6");
    f.put("S0046", "E-PL7");
    f.put("S0047", "E-M1");
    f.put("S0051", "E-M10");
    f.put("S0052", "E-M5MarkII");
    f.put("S0059", "E-M10MarkII");
    f.put("S0061", "PEN-F");
    f.put("S0065", "E-PL8");
    f.put("S0067", "E-M1MarkII");
    f.put("SR45", "D220");
    f.put("SR55", "D320L");
    f.put("SR83", "D340L");
    f.put("SR85", "C830L,D340R");
    f.put("SR852", "C860L,D360L");
    f.put("SR872", "C900Z,D400Z");
    f.put("SR874", "C960Z,D460Z");
    f.put("SR951", "C2000Z");
    f.put("SR952", "C21");
    f.put("SR953", "C21T.commu");
    f.put("SR954", "C2020Z");
    f.put("SR955", "C990Z,D490Z");
    f.put("SR956", "C211Z");
    f.put("SR959", "C990ZS,D490Z");
    f.put("SR95A", "C2100UZ");
    f.put("SR971", "C100,D370");
    f.put("SR973", "C2,D230");
    f.put("SX151", "E100RS");
    f.put("SX351", "C3000Z / C3030Z");
    f.put("SX354", "C3040Z");
    f.put("SX355", "C2040Z");
    f.put("SX357", "C700UZ");
    f.put("SX358", "C200Z,D510Z");
    f.put("SX374", "C3100Z,C3020Z");
    f.put("SX552", "C4040Z");
    f.put("SX553", "C40Z,D40Z");
    f.put("SX556", "C730UZ");
    f.put("SX558", "C5050Z");
    f.put("SX571", "C120,D380");
    f.put("SX574", "C300Z,D550Z");
    f.put("SX575", "C4100Z,C4000Z");
    f.put("SX751", "X200,D560Z,C350Z");
    f.put("SX752", "X300,D565Z,C450Z");
    f.put("SX753", "C750UZ");
    f.put("SX754", "C740UZ");
    f.put("SX755", "C755UZ");
    f.put("SX756", "C5060WZ");
    f.put("SX757", "C8080WZ");
    f.put("SX758", "X350,D575Z,C360Z");
    f.put("SX759", "X400,D580Z,C460Z");
    f.put("SX75A", "AZ-2ZOOM");
    f.put("SX75B", "D595Z,C500Z");
    f.put("SX75C", "X550,D545Z,C480Z");
    f.put("SX75D", "IR-300");
    f.put("SX75F", "C55Z,C5500Z");
    f.put("SX75G", "C170,D425");
    f.put("SX75J", "C180,D435");
    f.put("SX771", "C760UZ");
    f.put("SX772", "C770UZ");
    f.put("SX773", "C745UZ");
    f.put("SX774", "X250,D560Z,C350Z");
    f.put("SX775", "X100,D540Z,C310Z");
    f.put("SX776", "C460ZdelSol");
    f.put("SX777", "C765UZ");
    f.put("SX77A", "D555Z,C315Z");
    f.put("SX851", "C7070WZ");
    f.put("SX852", "C70Z,C7000Z");
    f.put("SX853", "SP500UZ");
    f.put("SX854", "SP310");
    f.put("SX855", "SP350");
    f.put("SX873", "SP320");
    f.put("SX875", "FE180/X745");
    f.put("SX876", "FE190/X750");
  }
  
  public f0() {
    a(new e0(this));
  }
  
  private void a(byte[] paramArrayOfbyte) {
    n n = new n(paramArrayOfbyte);
    n.a(true);
    int j = paramArrayOfbyte.length / 4;
    int i = 0;
    while (i < j) {
      try {
        a(61440 + i, n.d());
        i++;
      } catch (IOException iOException) {
        iOException.printStackTrace();
        break;
      } 
    } 
  }
  
  public String a() {
    return "Olympus Makernote";
  }
  
  public void a(int paramInt, byte[] paramArrayOfbyte) {
    if (paramInt == 1 || paramInt == 3) {
      a(paramArrayOfbyte);
      return;
    } 
    super.a(paramInt, paramArrayOfbyte);
  }
  
  protected HashMap<Integer, String> b() {
    return e;
  }
  
  public boolean f() {
    Long long_ = l(61447);
    return (long_ != null && long_.longValue() == 5L);
  }
  
  static {
    e.put(Integer.valueOf(0), "Makernote Version");
    e.put(Integer.valueOf(1), "Camera Settings");
    e.put(Integer.valueOf(3), "Camera Settings");
    e.put(Integer.valueOf(64), "Compressed Image Size");
    e.put(Integer.valueOf(129), "Thumbnail Offset");
    e.put(Integer.valueOf(136), "Thumbnail Offset");
    e.put(Integer.valueOf(137), "Thumbnail Length");
    e.put(Integer.valueOf(256), "Thumbnail Image");
    e.put(Integer.valueOf(257), "Colour Mode");
    e.put(Integer.valueOf(258), "Image Quality");
    e.put(Integer.valueOf(259), "Image Quality");
    e.put(Integer.valueOf(260), "Body Firmware Version");
    e.put(Integer.valueOf(512), "Special Mode");
    e.put(Integer.valueOf(513), "JPEG Quality");
    e.put(Integer.valueOf(514), "Macro");
    e.put(Integer.valueOf(515), "BW Mode");
    e.put(Integer.valueOf(516), "Digital Zoom");
    e.put(Integer.valueOf(517), "Focal Plane Diagonal");
    e.put(Integer.valueOf(518), "Lens Distortion Parameters");
    e.put(Integer.valueOf(519), "Camera Type");
    e.put(Integer.valueOf(520), "Pict Info");
    e.put(Integer.valueOf(521), "Camera Id");
    e.put(Integer.valueOf(523), "Image Width");
    e.put(Integer.valueOf(524), "Image Height");
    e.put(Integer.valueOf(525), "Original Manufacturer Model");
    e.put(Integer.valueOf(640), "Preview Image");
    e.put(Integer.valueOf(768), "Pre Capture Frames");
    e.put(Integer.valueOf(769), "White Board");
    e.put(Integer.valueOf(770), "One Touch WB");
    e.put(Integer.valueOf(771), "White Balance Bracket");
    e.put(Integer.valueOf(772), "White Balance Bias");
    e.put(Integer.valueOf(1027), "Scene Mode");
    e.put(Integer.valueOf(1028), "Serial Number");
    e.put(Integer.valueOf(1029), "Firmware");
    e.put(Integer.valueOf(3584), "Print Image Matching (PIM) Info");
    e.put(Integer.valueOf(3840), "Data Dump");
    e.put(Integer.valueOf(3841), "Data Dump 2");
    e.put(Integer.valueOf(4096), "Shutter Speed Value");
    e.put(Integer.valueOf(4097), "ISO Value");
    e.put(Integer.valueOf(4098), "Aperture Value");
    e.put(Integer.valueOf(4099), "Brightness Value");
    e.put(Integer.valueOf(4100), "Flash Mode");
    e.put(Integer.valueOf(4101), "Flash Device");
    e.put(Integer.valueOf(4102), "Bracket");
    e.put(Integer.valueOf(4103), "Sensor Temperature");
    e.put(Integer.valueOf(4104), "Lens Temperature");
    e.put(Integer.valueOf(4105), "Light Condition");
    e.put(Integer.valueOf(4106), "Focus Range");
    e.put(Integer.valueOf(4107), "Focus Mode");
    e.put(Integer.valueOf(4108), "Focus Distance");
    e.put(Integer.valueOf(4109), "Zoom");
    e.put(Integer.valueOf(4110), "Macro Focus");
    e.put(Integer.valueOf(4111), "Sharpness");
    e.put(Integer.valueOf(4112), "Flash Charge Level");
    e.put(Integer.valueOf(4113), "Colour Matrix");
    e.put(Integer.valueOf(4114), "Black Level");
    e.put(Integer.valueOf(4115), "Color Temperature BG");
    e.put(Integer.valueOf(4116), "Color Temperature RG");
    e.put(Integer.valueOf(4117), "White Balance Mode");
    e.put(Integer.valueOf(4119), "Red Balance");
    e.put(Integer.valueOf(4120), "Blue Balance");
    e.put(Integer.valueOf(4121), "Color Matrix Number");
    e.put(Integer.valueOf(4122), "Serial Number");
    e.put(Integer.valueOf(4123), "External Flash AE1 0");
    e.put(Integer.valueOf(4124), "External Flash AE2 0");
    e.put(Integer.valueOf(4125), "Internal Flash AE1 0");
    e.put(Integer.valueOf(4126), "Internal Flash AE2 0");
    e.put(Integer.valueOf(4127), "External Flash AE1");
    e.put(Integer.valueOf(4128), "External Flash AE2");
    e.put(Integer.valueOf(4129), "Internal Flash AE1");
    e.put(Integer.valueOf(4130), "Internal Flash AE2");
    e.put(Integer.valueOf(4131), "Flash Bias");
    e.put(Integer.valueOf(4132), "Internal Flash Table");
    e.put(Integer.valueOf(4133), "External Flash G Value");
    e.put(Integer.valueOf(4134), "External Flash Bounce");
    e.put(Integer.valueOf(4135), "External Flash Zoom");
    e.put(Integer.valueOf(4136), "External Flash Mode");
    e.put(Integer.valueOf(4137), "Contrast");
    e.put(Integer.valueOf(4138), "Sharpness Factor");
    e.put(Integer.valueOf(4139), "Colour Control");
    e.put(Integer.valueOf(4140), "Valid Bits");
    e.put(Integer.valueOf(4141), "Coring Filter");
    e.put(Integer.valueOf(4142), "Olympus Image Width");
    e.put(Integer.valueOf(4143), "Olympus Image Height");
    e.put(Integer.valueOf(4144), "Scene Detect");
    e.put(Integer.valueOf(4145), "Scene Area");
    e.put(Integer.valueOf(4147), "Scene Detect Data");
    e.put(Integer.valueOf(4148), "Compression Ratio");
    e.put(Integer.valueOf(4149), "Preview Image Valid");
    e.put(Integer.valueOf(4150), "Preview Image Start");
    e.put(Integer.valueOf(4151), "Preview Image Length");
    e.put(Integer.valueOf(4152), "AF Result");
    e.put(Integer.valueOf(4153), "CCD Scan Mode");
    e.put(Integer.valueOf(4154), "Noise Reduction");
    e.put(Integer.valueOf(4155), "Infinity Lens Step");
    e.put(Integer.valueOf(4156), "Near Lens Step");
    e.put(Integer.valueOf(4157), "Light Value Center");
    e.put(Integer.valueOf(4158), "Light Value Periphery");
    e.put(Integer.valueOf(4159), "Field Count");
    e.put(Integer.valueOf(8208), "Equipment");
    e.put(Integer.valueOf(8224), "Camera Settings");
    e.put(Integer.valueOf(8240), "Raw Development");
    e.put(Integer.valueOf(8241), "Raw Development 2");
    e.put(Integer.valueOf(8256), "Image Processing");
    e.put(Integer.valueOf(8272), "Focus Info");
    e.put(Integer.valueOf(12288), "Raw Info");
    e.put(Integer.valueOf(16384), "Main Info");
    e.put(Integer.valueOf(61442), "Exposure Mode");
    e.put(Integer.valueOf(61443), "Flash Mode");
    e.put(Integer.valueOf(61444), "White Balance");
    e.put(Integer.valueOf(61445), "Image Size");
    e.put(Integer.valueOf(61446), "Image Quality");
    e.put(Integer.valueOf(61447), "Shooting Mode");
    e.put(Integer.valueOf(61448), "Metering Mode");
    e.put(Integer.valueOf(61449), "Apex Film Speed Value");
    e.put(Integer.valueOf(61450), "Apex Shutter Speed Time Value");
    e.put(Integer.valueOf(61451), "Apex Aperture Value");
    e.put(Integer.valueOf(61452), "Macro Mode");
    e.put(Integer.valueOf(61453), "Digital Zoom");
    e.put(Integer.valueOf(61454), "Exposure Compensation");
    e.put(Integer.valueOf(61455), "Bracket Step");
    e.put(Integer.valueOf(61457), "Interval Length");
    e.put(Integer.valueOf(61458), "Interval Number");
    e.put(Integer.valueOf(61459), "Focal Length");
    e.put(Integer.valueOf(61460), "Focus Distance");
    e.put(Integer.valueOf(61461), "Flash Fired");
    e.put(Integer.valueOf(61462), "Date");
    e.put(Integer.valueOf(61463), "Time");
    e.put(Integer.valueOf(61464), "Max Aperture at Focal Length");
    e.put(Integer.valueOf(61467), "File Number Memory");
    e.put(Integer.valueOf(61468), "Last File Number");
    e.put(Integer.valueOf(61469), "White Balance Red");
    e.put(Integer.valueOf(61470), "White Balance Green");
    e.put(Integer.valueOf(61471), "White Balance Blue");
    e.put(Integer.valueOf(61472), "Saturation");
    e.put(Integer.valueOf(61473), "Contrast");
    e.put(Integer.valueOf(61474), "Sharpness");
    e.put(Integer.valueOf(61475), "Subject Program");
    e.put(Integer.valueOf(61476), "Flash Compensation");
    e.put(Integer.valueOf(61477), "ISO Setting");
    e.put(Integer.valueOf(61478), "Camera Model");
    e.put(Integer.valueOf(61479), "Interval Mode");
    e.put(Integer.valueOf(61480), "Folder Name");
    e.put(Integer.valueOf(61481), "Color Mode");
    e.put(Integer.valueOf(61482), "Color Filter");
    e.put(Integer.valueOf(61483), "Black and White Filter");
    e.put(Integer.valueOf(61484), "Internal Flash");
    e.put(Integer.valueOf(61485), "Apex Brightness Value");
    e.put(Integer.valueOf(61486), "Spot Focus Point X Coordinate");
    e.put(Integer.valueOf(61487), "Spot Focus Point Y Coordinate");
    e.put(Integer.valueOf(61488), "Wide Focus Zone");
    e.put(Integer.valueOf(61489), "Focus Mode");
    e.put(Integer.valueOf(61490), "Focus Area");
    e.put(Integer.valueOf(61491), "DEC Switch Position");
  }
}


/* Location:              /home/yc/Downloads/LeaveHomeSafe.jar!/e/d/c/o/a0/f0.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       1.1.3
 */